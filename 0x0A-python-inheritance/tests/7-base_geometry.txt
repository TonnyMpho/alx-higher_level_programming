`7-base_geometry.py` module Tests
=================================

Importing module:

>>> BaseGeometry = __import__('7-base_geometry').BaseGeometry


Printing area
>>> bg = BaseGeometry()
>>> bg.area()
Traceback (most recent call last):
	...
Exception: area() is not implemented


non-integer argument
>>> bg = BaseGeometry()
>>> bg.integer_validator("name", "john")
Traceback (most recent call last):
	...
TypeError: name must be an integer

Trying 0:
>>> bg = BaseGeometry()
>>> bg.integer_validator("age", 0)
Traceback (most recent call last):
	...
ValueError: age must be greater than 0


non-integer argument
>>> bg = BaseGeometry()
>>> bg.integer_validator("name", False)
Traceback (most recent call last):
        ...
TypeError: name must be an integer


negative value
>>> bg = BaseGeometry()
>>> bg.integer_validator("distance", -4)
Traceback (most recent call last):
    	...
ValueError: distance must be greater than 0


positive value
>>> bg = BaseGeometry()
>>> bg.integer_validator("my_int", 12)


>>> bg = BaseGeometry()
>>> bg.integer_validator("name")
Traceback (most recent call last):
    	...
TypeError: integer_validator() missing 1 required positional argument: 'value'

no arguments
>>> bg = BaseGeometry()
>>> bg.integer_validator()
Traceback (most recent call last):
	...
TypeError: integer_validator() missing 2 required positional arguments: 'name' and 'value'


>>> bg = BaseGeometry()
>>> bg.integer_validator("name", 1, 2)
Traceback (most recent call last):
    	...
TypeError: integer_validator() takes 3 positional arguments but 4 were given


non-integer argument
>>> bg = BaseGeometry()
>>> bg.integer_validator("name", (1,2))
Traceback (most recent call last):
        ...
TypeError: name must be an integer


Trying a list
>>> bg = BaseGeometry()
>>> bg.integer_validator("age", [3])
Traceback (most recent call last):
 	...
TypeError: age must be an integer


Trying dictionary
>>> bg = BaseGeometry()
>>> bg.integer_validator("age", {3, 4})
Traceback (most recent call last):
        ...
TypeError: age must be an integer


Testing None
>>> bg = BaseGeometry()
>>> bg.integer_validator("age", None)
Traceback (most recent call last):
	...
TypeError: age must be an integer
